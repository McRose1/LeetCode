天际线问题，肯定要用到扫描线算法

使用扫描线，从左至右扫过

山景城一姐：
模拟有一个画笔，画笔竖直方向移动必会产生 key point
竖直方向：必会有 key point
横向方向：不产生 key point，可能使我们退出某个大楼的扫描

这题的 trick 处理在于
给定的是一个矩阵：
[[2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8]]
矩阵里每一列代表大楼的左边界，右边界，和它的高度
我们需要把这个矩阵拆成两个矩阵
[2, 9, 10] ->  [2, -10]  [9, 10]
tricky 的地方在于让左边起始点高度为负数，便于区分，这样我们相当于获得了大楼的每个点的坐标

将这些坐标存在一个 list 里，并且按 x坐标从小到大排序，注意！特殊情况：
两个坐标的 x坐标相等，a[1] - b[1]，即上升阶段 height 高的先被扫，下降阶段 height 低的先被扫

借助 Heap 实现整个过程
碰到纵坐标为负，说明此时开始扫描，把 height offer 进去
碰到纵坐标为正，说明该 height 的大楼已经扫描完毕，把该 height poll 出来

记得维护 preHighest 来记录先前的最大高度，每次和 maxHeap 的堆顶比较，如果不一样，说明产生竖直移动
比堆顶低，说明此时画笔上升；
比堆顶高，说明此时画笔下降
每次结束要把 pre 更新

这题非常有意思，需要反复回来看！

