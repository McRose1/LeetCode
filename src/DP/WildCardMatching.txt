笔试频率极高的一道题，给定模式串和目标串，判断是否匹配
'?'可以匹配任何一个字母，'*'可以匹配任何序列

Case 1:
if 字符相同 or p.charAt(i) == '?':
  dp[p][s] = dp[p - 1][s - 1]

Case 2:
if p.charAt(i) == '*' && dp[i - 1][j - 1] == true:
1. *匹配一个字符
2. *继续匹配更多的字符
  dp[p - 1][i] = true (i >= s - 1)
  
s = "acdcb"
p = "*a*b"
  s  0  1  2  3  4  5 
p    #  a  c  d  c  b
0 #  T  F  F  F  F  F    
1 * (T) T  T  T  T  T
2 a  F  T  F  F  F  F 
3 *  F (T) T  T  T  T 
4 b  F  F  F  F  F  T 

注意 dp 数组 size 应该比字符串长度 + 1，因为我们想把对字符串 index = 0的初始化也包括在整体的赋值循环中：
dp[i][j] == dp[i - 1][j - 1] 这种情况，index = 0 就不能写在循环里，会增加麻烦
dp[2][2] 在这里表示的是 pattern 的前两个字符和 string 的前两个字符是否 match

这题回溯法用双指针做更快。。。但是。。。真的非常难想，里边的逻辑实在是太复杂了
所以碰到这题，先暂时用 DP 来做吧





