# 375. Guess Number Higher or Lower 2
还是猜数字，只不过这次如果猜错了，就要交乘以该数的罚款，求需要交多少钱可以保证能猜对数字

## 区间 DP
以 i 为第一次尝试找到最小开销的过程可以被分解为找左右区间内最小开销的子问题。

对于每个区间，我们重复问题拆分的过程，得到更多子问题，这就是 DP

dp[i][j] 代表在 (i, j) 中最坏情况下最小开销的代价。
对于每个 dp[i][j]，当前长度为 len = j - i + 1。因此我们按照区间长度从短到长求出 dp 数组

base case：区间只有一个数的时候，i == j -> dp[i][j] = 0

依次挑选每个数字作为第一次尝试的答案，可以求出最小开销：

cost(i, j) = pivot + max(cost(i, pivot - 1), cost(pivot + 1, n))

但是在计算开销的时候我们有一个便利之处，就是我们已经知道了小于 len 长度 dp 数组的所有答案，因此：

dp[i][j] = min {pivot + max(dp[i][pivot - 1], dp[pivot + 1][n])}  i <= pivot <= j

### Optimized 
在上一个方法中，我们尝试使用 (i,j) 中的每一个数作为第一个选的数，其实只需要从 (i + (len - 1)/2, j) 中选第一个就可以了
