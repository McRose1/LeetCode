基本计算器第二题，这题少了括号，多了乘除运算

还是有点晕

看答案，这题其实比第一题要简单很多。。。

整体思想就是，遇到数字，就先处理成 operand
遇到符号（也就是非空格，非数字），一个个判断：
'+' -> 简单的把 operand push 进 stack
'-' -> 把减号当做负号赋到 operand 上面然后 push 进 stack
'*' -> 简单地把栈顶元素 pop 出来和 operand 相乘即可
'/' -> 简单地把栈顶元素 pop 出来和 operand 相除即可

注意要处理一个 Corner case，即字符串的最后一个字符，因为 assume operation 都是 valid 的，所以最后一个字符一定是数字
这时的数字不仅要进入第一个条件处理变成 operand，还得进入第二个条件，和之前的 sign 进行处理进 stack

还有要注意的点是每次进入处理 sign 的条件，最后需要把 operand 置零，并且将 sign 赋予新的值（因为每次处理 sign 其实都是处理上一个 sign）
其实做过来也发现了，基本计算器这种题目，sign 都是有滞后性的，都是为了下一轮循环的operand服务的

一系列复杂的操作，就是为了让最后 stack 中的元素都是非常纯粹的 operand，没有任何 operator，最后只用累加就能得到答案

计算器的题目都很有逻辑性，也是我的软肋，要经常回来看！
