给定两个数 beginWord 和 endWord，和一个 wordList
在一起只改动一个字母的情况下，通过使用 wordList 里的过渡状态，输出这一过程需要多少这样的 word（包含起点词和终点词）
（endWord 需要在 wordList 里面）

tag 为 BFS

感觉毫无思绪。。。

BFS 需要用到 queue

beginWord = "hit",
endWord = "cog",
wordList = ["hot","dot","dog","lot","log","cog"]

一层一层替换，hit 有三个字母，所以分为三次并且每次有三层，每一层都有 a-z 26 个字母可以选择
第一个字母：ait, bit, cit, ..., yit, zit
  第二个字母：ait -> (aat, abt,...)
    第三个字母：aat -> (aaa, aab, ...)
    
乍一看是 26^3，但其实我们可以兼职，引入 queue 和 set 
我们先把 beginWord offer 到我们的 queue 中，queue 中存每次需要进行替换的 candidates
set 中存 wordList 里的单词，为了更快的使用 .contains()这个 function

首先，hit 是 candidate， level = 1
然后下一层 candidate 变成了 hot（candidates可以有多个）hit -> hot    level = 2
hot -> dot, lot         level = 3
dot -> dog; lot -> log  level = 4
dog -> cog; log -> cog  level = 5

第二遍先掌握基础的 BFS 吧

双向管 BFS 以后再研究
