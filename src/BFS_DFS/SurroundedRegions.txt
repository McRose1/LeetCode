像是下围棋的一道题，如果 O 被 X 包围了，就把 O 替换为 X，边界上的不算四周包围
tag 里有 DFS，BFS 和 union find
但是没什么思路。。。

山景城一姐：
1. 遍历边界，找‘O’ -> 有出口 -> 标记‘A’
2. 以该位置为中心，DFS 遍历，有相邻‘O’ -> 标记‘A’
3. 最后扫 board，没有被标记为‘A’ -> ‘X’
4. 其他标记为‘A’ -> ‘O’

这题用 DFS 做的方法真的是太巧妙了，非常喜欢这个解法
一般普通的想法就会是先遍历整个 board，然后遍历到 'O' 就开始 DFS，最后判断是否 valid
但是这题我们就逆向思维直接从 valid 路径的终点，也就是四周边界的 'O' 往回找，只要连上了，那都是 valid 的

以后还要再探索一下 BFS 和 Union Find 
