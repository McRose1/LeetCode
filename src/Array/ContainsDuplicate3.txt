该系列第 3 题，感觉和包含 duplicate 并没有半毛钱关系。。。
和第 2 题一样，规定了两个元素的最大 index 差，这题多了一个最大值差不能大于 t

标签是 sort 和从来没有见过的 Ordered Map

Hint 说 Time = O(nlogk) 暗示我们只需要对 k 个数字排序   -> TreeSet 
看答案吧

LC 官方：
引入了 TreeSet 
因为在 k 的范围内，引入下一个值的时候，我们需要这个范围内找到大于等于 x 的最小的数和小于等于 x 的最大的数
如果他们之间任意一个值和下一个值的差值小于等于 t，就直接 return true

需要用 long 代替 int，Corner case：[-2147483648, 2147483647], k=1, t=2147483647 最大值和最小值之间的差值早已经超过 Integer.MAX_VALUE

但是这题 bucket sort 才是最快的，利用 HashMap 建立 bucket，将每个桶所包含的区间范围设为 t
只要每次观察当前 bucket 和左右两边相邻的 bucket 是否满足条件即可，因为任何不在同一个桶或相邻桶的两个元素之间的距离一定是大于 t 的
这个问题和 bucket sort 的不同之处在于每次我们的 bucket 只需要包含最多一个元素就可以了，
因为如果任意一个 bucket 中包含了两个元素，那么这也就意味着这两个元素是“足够接近的”

bucket sort 这个方法真的非常巧妙，要多回来看
